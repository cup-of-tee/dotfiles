---
# tasks file for nvim
- name: Platform check
  ansible.builtin.debug:
    msg:
      - OS family is {{ ansible_os_family }}
      - Package manager is {{ ansible_pkg_mgr }}

- name: Dependencies for Arch
  ansible.builtin.package:
    name:
      - base-devel
      - cmake
      - curl
      - ninja
      - tree-sitter
      - unzip
    state: latest
  become: true
  when: ansible_facts['os_family'] == "Archlinux" and not skip_install

- name: Dependencies for Debian/Ubuntu
  ansible.builtin.apt:
    name:
      - ninja-build
      - gettext
      - libtool
      - libtool-bin
      - autoconf
      - automake
      - cmake
      - g++
      - pkg-config
      - unzip
      - curl
      - doxygen
    state: latest
  become: true
  when: ansible_facts['os_family'] == "Debian" and not skip_install

- name: Remove old dir
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/code/github.com/neovim/neovim"
    state: absent
  when: not skip_install

- name: Clone
  ansible.builtin.git:
    clone: true
    repo: https://github.com/neovim/neovim.git
    version: v0.8.0
    dest: "{{ ansible_user_dir }}/code/github.com/neovim/neovim"
    depth: 1
    force: true
    single_branch: true
    update: true
    # version: "{{ neovim_version | default('master') }}"
  when: not skip_install

- name: Build , Install and Clean
  when: not skip_install
  block:
    - name: Build
      make:
        chdir: "{{ ansible_user_dir }}/code/github.com/neovim/neovim"
        params:
          CMAKE_BUILD_TYPE: Release

    - name: Install
      make:
        chdir: "{{ ansible_user_dir }}/code/github.com/neovim/neovim"
        target: install
      become: true
  always:
    - name: Clean
      make:
        chdir: "{{ ansible_user_dir }}/code/github.com/neovim/neovim"
        target: clean
      become: true

- name: Remove old config dir
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/.config/nvim"
    state: absent

- name: Config folder
  ansible.builtin.file:
    mode: "0755"
    path: "{{ ansible_user_dir }}/.config/nvim"
    state: directory

- name: Clone Astronvim
  ansible.builtin.git:
    clone: true
    repo: https://github.com/AstroNvim/AstroNvim
    version: main
    dest: "{{ ansible_user_dir }}/.config/nvim"
    depth: 1
    force: true
    single_branch: true
    update: true

- name: Clone Astronvim User
  ansible.builtin.git:
    clone: true
    repo: https://github.com/AstroNvim/user_example
    version: main
    dest: "{{ ansible_user_dir }}/.config/nvim/lua/user"
    depth: 1
    force: true
    single_branch: true
    update: true
